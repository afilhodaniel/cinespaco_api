== Cinespaço API

Este é um projeto de código aberto que tem como objetivo manter uma API simples e funcional para que aplicações diversas possam consumir a programação de salas e horários de filmes em cartaz do Cinespaço, uma das principais redes de cinema do país.

Tudo o que você precisa saber é que o projeto foi desenvolvido com Rails e é basicamente um parser do site oficial do {Cinespaço}[http://cinespaco.com.br/]. Então, acabei usando uma boa dose da fantástica gem {Nokogiri}[http://www.nokogiri.org/] e também um pouquinho da {HTTParty}[https://github.com/jnunemaker/httparty].

Caso queira ver a API em ação, acesse: {https://cinespacoapi.heroku.com}[https://cinespacoapi.heroku.com]. Sinta-se livre para contribuir como quiser. Toda ajuda será bem-vinda!

=== Recomendado

* Ruby 2.3.0 ou superior
* Rails 4.2.5.1

=== Iniciando

Clone este repositório:

  git clone git@github.com:afilhodaniel/cinepolis_api

Instale as dependências necessárias:
  
  bundle install

=== Requisições

* GET /api/v1/states.json
* GET /api/v1/states/:uf.json
* GET /api/v1/cities.json
* GET /api/v1/cities/:id.json
* GET /api/v1/movie_theaters.json
* GET /api/v1/movie_theaters/:id.json
* GET /api/v1/movies.json
* GET /api/v1/movies/:id.json

<b>GET /api/v1/states.json</b>

Retorna um JSON com todos os estados e suas cidades. Exemplo:

  {
    states: [
      {
        uf: "SC",
        name: "Santa Catarina",
        url: "http://localhost:3000/api/v1/states/sc.json",
        cities: [
          {
            id: 8,
            name: "Florianópolis",
            url: "http://localhost:3000/api/v1/cities/8.json"
          },
          ...
        ]
      },
      ...
    ]
  }

<b>GET /api/v1/states/pb.json</b>

Retorna um JSON com todas as cidades do estado requisitado. Exemplo:

  {
    success: true,
    state: {
      uf: "PB",
      name: "Paraíba",
      url: "http://localhost:3000/api/v1/states/pb.json"
      cities: [
        {
          id: 5,
          name: "João Pessoa",
          url: "http://localhost:3000/api/v1/cities/5.json"
        },
        ...
      ]
    }
  }

<b>GET /api/v1/cities.json</b>

Retorna um JSON com todas as cidades e suas unidades de cinema. Exemplo:

  {
    cities: [
      {
        id: 8,
        name: "Florianópolis",
        url: "http://localhost:3000/api/v1/cities/8.json",
        state: {
          uf: "SC",
          name: "Santa Catarina",
          url: "http://localhost:3000/api/v1/states/sc.json"
        }
        movie_theaters: [
          {
            id: 8,
            name: "Beiramar Shopping",
            url: "http://localhost:3000/api/v1/movie_theaters/8.json"
          },
          ...
        ]
      },
      ...
    ]
  }

<b>GET /api/v1/cities/5.json</b>

Retorna um JSON com todas as informações sobre a cidade requisitada e todas as suas unidades de cinema. Exemplo:

  {
    success: true,
    city: {
      id: "5",
      name: "João Pessoa",
      url: "http://localhost:3000/api/v1/cities/5.json",
      state: {
        uf: "PB",
        name: "Paraíba",
        url: "http://localhost:3000/api/v1/states/pb.json"
      },
      movie_theaters: [
        {
          id: "5",
          name: "Mag Shopping",
          url: "http://localhost:3000/api/v1/movie_theaters/5.json"
        },
        ...
      ]
    }
  }

<b>GET /api/v1/movie_theaters.json</b>

Retorna um JSON com todas as unidades de cinema. Exemplo:

  {
    movie_theaters: [
      {
        id: 8,
        name: "Beiramar Shopping",
        url: "http://localhost:3000/api/v1/movie_theaters/8.json"
        city: {
          id: 8,
          name: "Florianópolis",
          url: "http://localhost:3000/api/v1/cities/8.json",
          state: {
            uf: "SC",
            name: "Santa Catarina",
            url: "http://localhost:3000/api/v1/states/sc.json"
          }
        }
      },
      ...
    ]
  }

<b>GET /api/v1/movie_theaters/:id.json</b>

Retorna um JSON com a programação completa de salas e horários da unidade de cinema em questão. Exemplo:

  {
    success: true,
    movie_theater: {
      id: 5,
      name: "Mag Shopping",
      url: "http://localhost:3000/api/v1/movie_theaters/5.json",
      city: {
        id: 5,
        name: "João Pessoa",
        url: "http://localhost:3000/api/v1/cities/5.json",
        state: {
          uf: "PB",
          name: "Paraíba",
          url: "http://localhost:3000/api/v1/states/pb.json"
        }
      },
      weeks: [
        {
          from: "03/03",
          to: "09/03",
          sessions: [
            {
              room: "1",
              movie: {
                id: "apaixonados-o-filme",
                name: "Apaixonados - O Filme",
                url: "http://localhost:3000/api/v1/movies/apaixonados-o-filme.json",
                pg: "10",
                subtitled: false,
                dubbed: true
              },
              3d: false,
              imax: false,
              vip: false,
              hours: [
                "14:30",
                "16:50",
                "19:10",
                "21:20"
              ]
            },
            ...
          ]
        },
        ...
      ]
    }
  }

<b>GET /api/v1/movies.json</b>

Retorna um JSON com todos os filmes em cartaz. Exemplo:

  {
    movies: [
      {
        id: "a-garota-dinamarquesa",
        name: "A Garota Dinamarquesa",
        url: "http://localhost:3000/api/v1/movies/a-garota-dinamarquesa.json"
      },
      ...
    ]
  }

<b>GET /api/v1/movies/:id.json</b>

Retorna um JSON com todas as informações sobre o filme em questão e a programação completa de salas e horários de todas as unidades de cinema em que o filme está sendo exibido, organizada por cidade. Exemplo:

  {
    success: true,
    movie: {
      id: "deadpool",
      image: "http://cinespaco.com.br/_img/_filmes/871_m.jpg",
      trailer: "http://www.youtube.com/embed/jtukwSBmrNo",
      name: "Deadpool",
      original_name: "Deadpool",
      pg: "16",
      sinopse: "Ex-militar e mercenário, Wade Wilson (Ryan Reynolds) é diagnosticado com câncer em estado terminal, porém encontra uma possibilidade de cura em uma sinistra experiência científica. Recuperado, com poderes e um incomum senso de humor, ele torna-se Deadpool e busca vingança contra o homem que destruiu sua vida.",
      cast: "Ryan Reynolds, Morena Baccarin, Ed Skrein",
      director: "Tim Miller",
      cities: [
        {
          id: 8,
          name: "Florianópolis",
          url: "http://localhost:3000/api/v1/cities/8.json",
          state: {
            uf: "SC",
            name: "Santa Catarina",
            url: "http://localhost:3000/api/v1/states/sc.json"
          },
          movie_theaters: [
            {
              id: 8,
              name: "Beiramar Shopping",
              url: "http://localhost:3000/api/v1/movie_theaters/8.json",
              sessions: [
                {
                  room: "2",
                  subtitled: true,
                  dubbed: false,
                  3d: false,
                  imax: false,
                  vip: false,
                  hours: [
                    "22:00"
                  ]
                },
                ...
              ]
            },
            ...
          ]
        },
        ...
      ]
    }
  }

<b>404</b>

No caso de você solicitar algum recurso que não existe, a API retornará algo como isso:

  {
    success: false,
    errors: {
      movie: "Movie doesn't exists"
    }
  }

=== Outros Projetos

Também fiz outros projetos de API de outros cinemas. Todos seguem exatamente (ou quase) a mesma estrutura. Confira nos links abaixo:

<b>Cinépolis API:</b> {https://github.com/afilhodaniel/cinepolis_api}[https://github.com/afilhodaniel/cinepolis_api]

=== Observações

1. Você pode usar este projeto como bem entender. Mas sugiro não usar o deploy do Heroku citado mais acima. Trata-se de um deploy que eu fiz apenas para demonstrar o funcionamento da API. Faça seu próprio deploy, em um servidor profissional.

2. Caso queria entender melhor sobre a estrutura do projeto, acesse: {https://github.com/afilhodaniel/rails_app}[https://github.com/afilhodaniel/rails_app]